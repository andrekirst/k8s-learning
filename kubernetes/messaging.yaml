apiVersion: v1
kind: ConfigMap
metadata:
  name: messaging
  labels:
    service: common
    kind: messaging
data:
  rabbitmq.conf: |-
    loopback_users.guest = false
    log.console = true
    log.console.level = debug
    log.exchange = true
    log.exchange.level = debug
  enabled_plugins: |-
    [rabbitmq_management].
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: messaging
  labels:
    service: common
    kind: messaging
spec:
  replicas: 3
  serviceName: messaging
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      service: common
      kind: messaging
  template:
    metadata:
      labels:
        service: common
        kind: messaging
    spec:
      containers:
        - name: messaging
          image: rabbitmq:3.8.14-management
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - >
                  if [ -z "$(grep rabbitmq /etc/resolv.conf)" ]; then
                    sed "s/^search \([^ ]\+\)/search rabbitmq.\1 \1/" /etc/resolv.conf > /etc/resolv.conf.new;
                    cat /etc/resolv.conf.new > /etc/resolv.conf;
                    rm /etc/resolv.conf.new;
                  fi;
                  until rabbitmqctl node_health_check; do sleep 1; done;
                  if [[ "$HOSTNAME" != "messaging-0" && -z "$(rabbitmqctl cluster_status | grep messaging-0)" ]]; then
                    rabbitmqctl stop_app;
                    rabbitmqctl join_cluster rabbit@messaging-0;
                    rabbitmqctl start_app;
                  fi;
                  rabbitmqctl set_policy ha-all "." '{"ha-mode":"exactly","ha-params":3,"ha-sync-mode":"automatic"}'
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: 'test'
          ports:
            - containerPort: 15672
              name: http
            - containerPort: 5672
              name: amqp
          volumeMounts:
            - name: messaging-config-map
              mountPath: /etc/rabbitmq/
            - name: messaging
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: messaging-config-map
          configMap:
            name: messaging
  volumeClaimTemplates:
    - metadata:
        name: messaging
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
kind: Service
apiVersion: v1
metadata:
  name:  messaging-management-service
  labels:
    service: common
    kind: messaging
spec:
  selector:
    service: common
    kind: messaging
  type:  LoadBalancer
  ports:
  - name: http
    port: 15672
  - name: amqp
    port: 5672
---
apiVersion: v1
kind: Service
metadata:
  # The required headless service for StatefulSets
  name: rabbitmq
  labels:
    service: common
    kind: messaging
spec:
  ports:
  - port: 5672
    name: amqp
  - port: 4369
    name: epmd
  - port: 25672
    name: rabbitmq-dist
  clusterIP: None
  selector:
    service: common
    kind: messaging